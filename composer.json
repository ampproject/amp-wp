{
  "name": "ampproject/amp-wp",
  "description": "WordPress plugin for adding AMP support.",
  "license": "GPL-2.0-or-later",
  "type": "wordpress-plugin",
  "homepage": "https://github.com/ampproject/amp-wp",
  "require": {
    "php": ">=7.4 || ^8.0",
    "ext-curl": "*",
    "ext-date": "*",
    "ext-dom": "*",
    "ext-filter": "*",
    "ext-iconv": "*",
    "ext-json": "*",
    "ext-libxml": "*",
    "ext-spl": "*",
    "ampproject/amp-toolbox": "dev-main",
    "cweagans/composer-patches": "^1.0",
    "fasterimage/fasterimage": "1.5.0",
    "sabberworm/php-css-parser": "dev-master#cc791ad"
  },
  "require-dev": {
    "automattic/vipwpcs": "^3.0",
    "civicrm/composer-downloads-plugin": "^3.0",
    "google/cloud-storage": "^1.0",
    "mikey179/vfsstream": "1.6.11",
    "mustache/mustache": "^2",
    "php-stubs/wordpress-stubs": "^6.0",
    "phpcompatibility/phpcompatibility-wp": "2.1.4",
    "phpdocumentor/reflection": "^5.3",
    "roave/security-advisories": "dev-latest",
    "sirbrillig/phpcs-variable-analysis": "2.11.17",
    "wp-cli/export-command": "^2.0",
    "wp-cli/extension-command": "^2.0",
    "wp-cli/wp-cli": "^2.0",
    "wp-cli/wp-cli-tests": "^4.0",
    "wp-coding-standards/wpcs": "^3.0",
    "yoast/wp-test-utils": "^1.0"
  },
  "suggest": {
    "ext-intl": "Enables use of idn_to_utf8() to convert punycode domains to UTF-8 for use with an AMP Cache.",
    "ext-mbstring": "Used by PHP-CSS-Parser when working with stylesheets."
  },
  "minimum-stability": "dev",
  "prefer-stable": true,
  "autoload": {
    "psr-4": {
      "AmpProject\\AmpWP\\": "src/"
    },
    "classmap": [
      "includes/"
    ],
    "files": [
      "includes/bootstrap.php"
    ]
  },
  "autoload-dev": {
    "psr-4": {
      "AmpProject\\AmpWP\\Documentation\\": "docs/src/",
      "AmpProject\\AmpWP\\Tests\\": "tests/php/src/"
    },
    "classmap": [
      "tests/php/validation/"
    ],
    "files": [
      "tests/php/register-wp-cli-commands.php",
      "docs/includes/register-wp-cli-commands.php"
    ]
  },
  "config": {
    "allow-plugins": {
      "civicrm/composer-downloads-plugin": true,
      "cweagans/composer-patches": true,
      "dealerdirect/phpcodesniffer-composer-installer": true
    },
    "platform": {
      "php": "7.4"
    },
    "sort-packages": true
  },
  "extra": {
    "composer-exit-on-patch-failure": true,
    "downloads": {
      "phpstan": {
        "path": "vendor/bin/phpstan",
        "type": "phar",
        "url": "https://github.com/phpstan/phpstan/releases/latest/download/phpstan.phar"
      }
    },
    "patches": {
      "sabberworm/php-css-parser": {
        "1. Validate name-start code points for identifier <https://github.com/westonruter/PHP-CSS-Parser/pull/2>": "https://github.com/sabberworm/PHP-CSS-Parser/compare/cc791ad...westonruter:PHP-CSS-Parser:fix/malformed-identifier-without-tests.diff",
        "2. Fix parsing CSS selectors which contain commas <https://github.com/westonruter/PHP-CSS-Parser/pull/1>": "https://github.com/sabberworm/PHP-CSS-Parser/compare/cc791ad...westonruter:PHP-CSS-Parser:fix/selector-comma-parsing-without-tests.diff",
        "3. Parse simple expressions <https://github.com/sabberworm/PHP-CSS-Parser/pull/389>": "https://github.com/sabberworm/PHP-CSS-Parser/compare/cc791ad...westonruter:PHP-CSS-Parser:fix/expression-parsing-without-tests.diff"
      }
    }
  },
  "scripts": {
    "analyze": "if [ -z $TEST_SKIP_PHPSTAN ]; then phpstan --version; phpstan analyze --ansi --memory-limit=2G; fi",
    "pre-commit": [
      "npm run lint:staged"
    ],
    "prepare-tests": "install-package-tests"
  }
}
